[package]
name       ="entropy-tss"
version    ="0.2.0"
authors    =['Entropy Cryptography <engineering@entropy.xyz>']
homepage   ='https://entropy.xyz/'
description='Entropy threshold signature scheme (TSS) server'
license    ='AGPL-3.0-or-later'
repository ='https://github.com/entropyxyz/entropy-core'
edition    ='2021'

[dependencies]
# Common
serde              ={ version="1.0", default-features=false, features=["derive"] }
serde_json         ="1.0"
anyhow             ="1.0.86"
thiserror          ="1.0.62"
blake2             ="0.10.4"
x25519-dalek       ={ version="2.0.1", features=["static_secrets"] }
rand_core          ="0.6.4"
zeroize            ="1.8.1"
hex                ="0.4.3"
reqwest-eventsource="0.6"
serde_derive       ="1.0.147"
synedrion          ="0.1"
strum              ="0.26.3"

# Async
futures="0.3"
tokio  ={ version="1.38", features=["macros", "fs", "rt-multi-thread", "io-util", "process", "sync"] }

# HTTP
reqwest={ version="0.12.5", features=["json", "stream"] }
axum   ={ version="0.7.5", features=["ws"] }

# Substrate
subxt             ="0.35.3"
parity-scale-codec="3.6.12"
sp-core           ={ version="31.0.0", default-features=false }

# Entropy
entropy-shared  ={ version="0.2.0", path="../shared" }
entropy-kvdb    ={ version="0.2.0", path="../kvdb", default-features=false }
entropy-protocol={ version="0.2.0", path="../protocol", features=["server"] }
entropy-client  ={ version="0.2.0", path="../client", default-features=false, features=["native"] }

# Programs
entropy-programs-runtime="0.10.0"

# Logging
tracing                 ="0.1.37"
tracing-subscriber      ={ version="0.3.18", features=["env-filter", "json"] }
tracing-loki            ="0.2"
tower-http              ={ version="0.5.2", features=["trace", "cors"] }
tracing-bunyan-formatter="0.3.9"
uuid                    ={ version="1.10.0", features=["v4"] }

# Misc
tokio-tungstenite="0.23.1"
bip39            ={ version="2.0.0", features=["zeroize"] }
bincode          ="1.3.3"
bytes            ={ version="1.6", default-features=false, features=["serde"] }
base64           ="0.22.1"
clap             ={ version="4.5.9", features=["derive"] }
num              ="0.4.3"
snow             ="0.9.6"
sha3             ="0.10.8"
hostname         ="0.4"
sha1             ="0.10.6"
sha2             ="0.10.8"
hkdf             ="0.12.4"

[dev-dependencies]
serial_test ="3.1.1"
hex-literal ="0.4.1"
project-root="0.2.2"
sp-keyring  ="34.0.0"
more-asserts="0.3.1"
lazy_static ="1.5.0"
blake3      ="1.5.1"
ethers-core ="2.0.14"
schnorrkel  ={ version="0.11.4", default-features=false, features=["std"] }
schemars    ={ version="0.8.21" }
subxt-signer="0.35.3"

# Note: We don't specify versions here because otherwise we run into a cyclical dependency between
# `entropy-tss` and `entropy-testing-utils` when we try and publish the `entropy-tss` crate.
#
# By not specifying a version Cargo automatically removes these crates before publishing, allowing
# the process to succeed.
#
# See: https://github.com/rust-lang/cargo/issues/4242
entropy-client       ={ path="../client", features=["full-client-native"] }
entropy-protocol     ={ path="../protocol", features=["unsafe"] }
entropy-testing-utils={ path="../testing-utils" }

[build-dependencies]
vergen={ version="8.3.2", features=["build", "git", "gitcl"] }

[features]
default=['std']
std    =["sp-core/std"]
unsafe =[]
alice  =[]
bob    =[]
# Enable this feature to run the integration tests for the wasm API of entropy-protocol
# This requires the entropy-protocol node-js module to be built and so is not run by default
wasm_test=[]
