#![allow(clippy::all)]

//! Autogenerated weights for `pallet_relayer`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-14, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `MacBook-Pro-9.local`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/entropy
// benchmark
// pallet
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_relayer
// --extrinsic=*
// --steps=50
// --repeat=20
// --header=./file_header.txt
// --output=./runtime/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_relayer`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_relayer::WeightInfo for WeightInfo<T> {
	// Storage: Relayer Registered (r:1 w:0)
	// Storage: StakingExtension SigningGroups (r:2 w:0)
	// Storage: StakingExtension IsValidatorSynced (r:1 w:0)
	// Storage: StakingExtension ThresholdServers (r:1 w:0)
	// Storage: Relayer Messages (r:1 w:1)
	/// The range of component `s` is `[0, 500]`.
	fn prep_transaction(s: u32, ) -> Weight {
		// Minimum execution time: 110_000 nanoseconds.
		Weight::from_ref_time(475_157_779 as u64)
			// Standard Error: 49_046
			.saturating_add(Weight::from_ref_time(6_494_438 as u64).saturating_mul(s as u64))
			.saturating_add(T::DbWeight::get().reads(5 as u64))
			.saturating_add(T::DbWeight::get().reads((1 as u64).saturating_mul(s as u64)))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Relayer Registered (r:1 w:0)
	// Storage: Relayer Registering (r:1 w:1)
	/// The range of component `a` is `[0, 25]`.
	/// The range of component `b` is `[0, 25]`.
	fn register(a: u32, b: u32, ) -> Weight {
		// Minimum execution time: 36_000 nanoseconds.
		Weight::from_ref_time(36_311_568 as u64)
			// Standard Error: 6_237
			.saturating_add(Weight::from_ref_time(67_085 as u64).saturating_mul(a as u64))
			// Standard Error: 6_237
			.saturating_add(Weight::from_ref_time(61_193 as u64).saturating_mul(b as u64))
			.saturating_add(T::DbWeight::get().reads(2 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: Relayer Registered (r:1 w:1)
	// Storage: Relayer Registering (r:0 w:1)
	fn swap_keys() -> Weight {
		// Minimum execution time: 37_000 nanoseconds.
		Weight::from_ref_time(38_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: StakingExtension ThresholdToStash (r:1 w:0)
	// Storage: Relayer Registering (r:1 w:1)
	// Storage: StakingExtension SigningGroups (r:1 w:0)
	/// The range of component `c` is `[0, 2]`.
	fn confirm_register_registering(_c: u32, ) -> Weight {
		// Minimum execution time: 62_000 nanoseconds.
		Weight::from_ref_time(68_219_613 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
	// Storage: StakingExtension ThresholdToStash (r:1 w:0)
	// Storage: Relayer Registering (r:1 w:1)
	// Storage: StakingExtension SigningGroups (r:1 w:0)
	// Storage: Relayer Registered (r:0 w:1)
	// Storage: Constraints AllowedToModifyConstraints (r:0 w:1)
	/// The range of component `c` is `[0, 2]`.
	fn confirm_register_registered(c: u32, ) -> Weight {
		// Minimum execution time: 67_000 nanoseconds.
		Weight::from_ref_time(73_330_939 as u64)
			// Standard Error: 162_183
			.saturating_add(Weight::from_ref_time(371_270 as u64).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(3 as u64))
	}
	// Storage: StakingExtension ThresholdToStash (r:1 w:0)
	// Storage: Relayer Registering (r:1 w:1)
	// Storage: StakingExtension SigningGroups (r:1 w:0)
	// Storage: Relayer Registered (r:0 w:1)
	/// The range of component `c` is `[0, 2]`.
	fn confirm_register_swapping(c: u32, ) -> Weight {
		// Minimum execution time: 64_000 nanoseconds.
		Weight::from_ref_time(71_095_027 as u64)
			// Standard Error: 169_077
			.saturating_add(Weight::from_ref_time(740_331 as u64).saturating_mul(c as u64))
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
}
