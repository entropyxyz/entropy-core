#![allow(clippy::all)]

//! Autogenerated weights for `pallet_programs`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-10-13, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `hcastano`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// target/debug/entropy
// benchmark
// pallet
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_programs
// --extrinsic=*
// --steps=50
// --repeat=20
// --header=./file_header.txt
// --output=./runtime/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_programs`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_programs::WeightInfo for WeightInfo<T> {
	/// Storage: Constraints AllowedToModifyConstraints (r:1 w:0)
	/// Proof Skipped: Constraints AllowedToModifyConstraints (max_values: None, max_size: None, mode: Measured)
	/// Storage: Constraints Bytecode (r:1 w:1)
	/// Proof Skipped: Constraints Bytecode (max_values: None, max_size: None, mode: Measured)
	fn update_program() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `236`
		//  Estimated: `3701`
		// Minimum execution time: 492_000_000 picoseconds.
		Weight::from_parts(551_000_000, 0)
			.saturating_add(Weight::from_parts(0, 3701))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
