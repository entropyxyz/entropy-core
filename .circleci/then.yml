version: 2.1
# orbs:
#   rust: circleci/rust@1.6.0

parameters:
  crypto:
    type: boolean
    default: false
  node:
    type: boolean
    default: false
  pallets:
    type: boolean
    default: false
  runtime:
    type: boolean
    default: false

commands:
  install-dependencies-and-checkout:
    steps:
      - install-dependencies
      - checkout
  increase-swap:
    steps:
      - run: sudo swapoff -a
      - run: sudo dd if=/dev/zero of=/swapfile bs=1G count=8
      - run: sudo chmod 0600 /swapfile
      - run: sudo mkswap /swapfile
      - run: sudo swapon /swapfile
      - run: grep Swap /proc/meminfo
  install-dependencies:
    steps:
      - run: sudo apt-get update
      - run: sudo apt install -y libssl-dev clang libclang-dev
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - run: rustup update nightly
      - run: rustup update stable
      - run: rustup component add rustfmt
      - run: rustup default stable
      # For whatever reason, substrate/wasm-builder (and therefore entropy-runtime)
      # requires nightly Rust. The rest builds fine on stable.
      - run: rustup target add wasm32-unknown-unknown --toolchain nightly
  fmt-lint:
    steps:
      - run:  curl -LsSf https://github.com/tamasfe/taplo/releases/download/0.8.0/taplo-full-linux-x86_64.gz | gunzip -N -d - > ${CARGO_HOME:-~/.cargo}/bin/taplo && chmod +x ${CARGO_HOME:-~/.cargo}/bin/taplo
      # We are using some unstable features of rustfmt
      - run: rustup run nightly cargo fmt --check
      - run: taplo fmt --check
      - run: rustup run nightly cargo clippy -- -D warnings

workflows:
  lint:
    jobs:
      - fmt-lint-all
  # crypto:
  #   when: << pipeline.parameters.crypto >>
  #   jobs:
  #     # - crypto-centralized-keygen
  #     - crypto-server
  #     # - crypto-kvdb
  #     # - crypto-entropy-shared
  node:
    when:
      or: [ << pipeline.parameters.node >>, << pipeline.parameters.pallets >>, << pipeline.parameters.runtime >>, pipeline.parameters.crypto ]
    jobs:
      - node-test
      - node-benchmark

jobs:
  fmt-lint-all:
    machine:
      image: "ubuntu-2004:202201-02"
      resource_class: "large"
    steps:
      - install-dependencies-and-checkout
      - fmt-lint
  crypto-server:
    machine:
      image: "ubuntu-2004:202201-02"
      resource_class: "xlarge"
    steps:
      - install-dependencies-and-checkout
      - run: cd crypto/server && cargo test --release # placeholder for test
        # temp
  # crypto-centralized-keygen:
  #   machine:
  #     image: "ubuntu-2004:202201-02"
  #     resource_class: "xlarge"
  #   steps:
  #     - install-dependencies-and-checkout
  #     - run: cd crypto/centralized-keygen
  # crypto-kvdb:
  #   machine:
  #     image: "ubuntu-2004:202201-02"
  #     resource_class: "xlarge"
  #   steps:
  #     - install-dependencies-and-checkout
  #     - run: cd crypto/kvdb
  # crypto-entropy-shared:
  #   machine:
  #     image: "ubuntu-2004:202201-02"
  #     resource_class: "xlarge"
  #   steps:
  #     - install-dependencies-and-checkout
  #     - run: cd crypto/shared
  node-test:
    machine:
      image: "ubuntu-2004:202201-02"
      resource_class: "xlarge"
    steps:
      - increase-swap
      - install-dependencies-and-checkout
      - run:
        # note, this must be release https://app.circleci.com/pipelines/github/entropyxyz/entropy-core/234/workflows/1ff7735d-2d69-43bd-80d7-2ba304df25e7/jobs/1175
          command: pushd node && cargo build --all-targets --release -j $(nproc) && cargo test --all-targets --release
          no_output_timeout: 45m
  node-benchmark:
    machine:
      image: "ubuntu-2004:202201-02"
      resource_class: "xlarge"
    steps:
      - install-dependencies-and-checkout
      - run: pushd node && cargo check --features=runtime-benchmarks
