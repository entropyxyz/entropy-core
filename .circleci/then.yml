commands:
    fmt-lint:
        steps:
            - run: curl -LsSf https://github.com/tamasfe/taplo/releases/download/0.8.0/taplo-full-linux-x86_64.gz | gunzip -N -d - > ${CARGO_HOME:-~/.cargo}/bin/taplo && chmod +x ${CARGO_HOME:-~/.cargo}/bin/taplo
            - run: rustup run nightly-2022-11-16-x86_64-unknown-linux-gnu cargo fmt --check
            - run: taplo fmt --check
            - run: rustup run nightly-2022-11-16-x86_64-unknown-linux-gnu cargo clippy -- -D warnings
    increase-swap:
        steps:
            - run: sudo swapoff -a
            - run: sudo dd if=/dev/zero of=/swapfile bs=1G count=8
            - run: sudo chmod 0600 /swapfile
            - run: sudo mkswap /swapfile
            - run: sudo swapon /swapfile
            - run: grep Swap /proc/meminfo
    install-dependencies:
        steps:
            - run: sudo sed -i "/#\$nrconf{restart} = 'i';/s/.*/\$nrconf{restart} = 'a';/" /etc/needrestart/needrestart.conf
            - run: sudo apt-get update
            - run: sudo apt install -y libssl-dev clang libclang-dev tor && sudo systemctl start tor && sudo systemctl enable tor
    install-rust:
        steps:
            - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            - run: rustup toolchain install nightly-2022-11-16-x86_64-unknown-linux-gnu
            - run: rustup update stable
            - run: rustup target add wasm32-unknown-unknown --toolchain nightly-2022-11-16-x86_64-unknown-linux-gnu
    install-dependencies-and-checkout:
        steps:
            # Needed to getch the currently private `synedrion` dependency
            # (this is its deploy key added to CircleCI)
            - add_ssh_keys:
                fingerprints:
                    - "ba:7e:d1:60:52:9d:52:6f:f9:1b:b0:14:72:8a:bf:b8"
            - install-dependencies
            - checkout
            - install-dependencies
            - install-rust
    new-cmd:
        steps:
            - run: echo test
    build:
        steps:
            - run: cargo build --release
    comment-on-pr:
        steps:
            - run: |
                sudo apt-get install jq
                pr_response=$(curl --location --request GET "https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls?head=$CIRCLE_PROJECT_USERNAME:$CIRCLE_BRANCH&state=open" \
                -u $GH_USER:$GH_TOKEN)
                if [ $(echo $pr_response | jq length) -eq 0 ]; then
                  echo "No PR found to update"
                else
                  pr_comment_url=$(echo $pr_response | jq -r ".[]._links.comments.href")
                fi
                echo curl --location --request POST "$pr_comment_url" \
                -u $GH_USER:$GH_TOKEN \
                --header 'Content-Type: application/json' \
                --data-raw "'{
                \"body\": \"$(cat pr-comment)\"
                }'"

jobs:
    crypto-server:
        machine:
            image: ubuntu-2204:2022.10.2
            resource_class: xlarge
        steps:
            - install-dependencies-and-checkout
            - run: cd crypto/server && cargo test --release
    fmt-lint-all:
        machine:
            image: ubuntu-2204:2022.10.2
            resource_class: xlarge
        steps:
            - install-dependencies-and-checkout
            - fmt-lint
    node-benchmark:
        machine:
            image: ubuntu-2204:2022.10.2
            resource_class: xlarge
        steps:
            - install-dependencies-and-checkout
            - run: pushd node && cargo check --features=runtime-benchmarks
    node-test:
        machine:
            image: ubuntu-2204:2022.10.2
            resource_class: xlarge
        steps:
            - increase-swap
            - install-dependencies-and-checkout
            - run:
                command: pushd node && cargo build --all-targets --release -j $(nproc) && cargo test --all-targets --release
                no_output_timeout: 45m
    build-and-release:
        machine:
            image: ubuntu-2204:2022.10.2
            resource_class: xlarge
        steps:
            - increase-swap
            - install-dependencies-and-checkout
            - build
            - release

parameters:
    crypto:
        default: false
        type: boolean
    node:
        default: false
        type: boolean
    pallets:
        default: false
        type: boolean
    runtime:
        default: false
        type: boolean
version: 2.1
workflows:
    lint:
        jobs:
            - fmt-lint-all
    test:
        jobs:
            - node-benchmark
    build:
        jobs:
            - node-test
        when:
            or:
                - << pipeline.parameters.node >>
                - << pipeline.parameters.pallets >>
                - << pipeline.parameters.runtime >>
                - pipeline.parameters.crypto
